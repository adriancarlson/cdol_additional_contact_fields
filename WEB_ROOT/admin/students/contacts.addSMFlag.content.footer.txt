<!--
    Title       : </admin/students/contacts.addSMFlag.content.footer.txt>
    Created By  : Peter Nethercott
    Date Created: 04/01/2020
    Last Updated: 03/01/2023

	04/28/2021 - PDN
		Renamed the function (added "KISD") and wrapped the call to it in a "ready" function.
    
    12/03/2021 - PDN
        Added logic to handle the new method of injecting the extensions to allow for different
        plugins to include additional extensions.
	 
	12/09/2022 - PDN
		Implemented fixes recommended by Jason Treadwell to allow for multiple plugins with
		custom fields to work correctly together.

	12/15/2022 - PDN
        Moved custom code from content.footer to this content.header file.

	02/15/2023 - PDN
        Removed the "on('click')" event since it was causing the dropdowns on the slide-out
        menus to not be selectable.

	03/01/2023 - PDN
        Put field placement back into the ...other.txt file.
-->
~[if#multi.~[x:version;short]>=21.4.2]
<script>
    require(['components/shared/utils/psCustomizationUtils'], function(psCU) {
        var psCustomizationUtils4kisd = Object.assign({}, psCU);
        // psCustomizationUtils4kisd.addExtensions([{url: '/ws/contacts/student/{id}', extensions: 'u_studentcontactdetail_cdol'}]);
        psCustomizationUtils4kisd.addExtensions([{url: '/ws/contacts/student/{id}', extensions: 'u_studentcontactdetail_cdol'}]);
    });
</script>
[else#multi]
<script>
    function onNgBeforeDataLoadKISD(controller) {
        console.log('on before Student Contact load', controller);
  
        // Set the scope variable that the main controller looks for when building the request
        _scope.extensionsQueryParam = 'extensions=u_studentcontactdetail_cdol';
  
        // Add a function that responds when the contact data is received
        _scope.$watch('context.isContactLoaded', function(newValue, oldValue) {
                if (newValue) {
                    console.log('Student Contact loaded');
                }
        });
        // Add a function that responds when the extension model is updated
        _scope.onChangeExtensionModel = function(mo) {
            console.log('Extension model changed', mo);
        };
    };
  
    // Set attribute so the "main controller" knows to invoke the function when the page is loaded
    // In this case, on the student Contact page, the controller is on a <div> tag with id="studentContactsPage"
    $j(function(){
        document.getElementById("studentContactsPage").setAttribute('init-customization', 'onNgBeforeDataLoadKISD');
    });

</script>
[/if#multi]

<script type="text/javascript">

$j( function() {
    // Add new SM Notifications column to the main list
    var tbl = $j("#studentContactsTable");
    tbl.find('colgroup col').last().before('<col style="width: auto">');
    tbl.find('tr').first().find('th').last().before('<th>SM Notifications</th>');
    tbl.find('tr').last().find('td').last().before('<td data-ng-class="{\'checkmark-icon\': contact.contactStudents[0].activeDetail.getExtensionFieldValue(\'studentcontactdetail\', \'u_studentcontactdetail_cdol\', \'schoolmessengerflg\')}"><center><em id="receives-smnotifications-{{$index}}" data-pss-validation-field="studentcontactdetail.u_studentcontactdetail_cdol.schoolmessengerflg" ></em></center></td>');

    // $j(document).on('click', tbl.find('tbody button'), function(){
    //     fixKISDFieldLocations();
    // });
});

    /* Thanks to Jason Treadwell who shared this with me * /
    function fixKISDFieldLocations() {
        //move checkbox to desired location in active tab
        var coreDiv, custDiv = null;
        var checkDemoActiveExist = setInterval(function() {
            coreDiv = $j('#receives-mail-div-active');
            if ( coreDiv.length ) {
                custDiv = $j('#receives-smnotifications-div-active');
                coreDiv.after(custDiv);
                clearInterval(checkDemoActiveExist);
            }
        }, 50); // check every 50ms
        
        //move checkbox to desired location in all tab
        var checkDemoAllExist = setInterval(function() {
            coreDiv = $j('#all-tab').find('div[id^=receives-mail-div]');
            if ( coreDiv.length ) {
                custDiv = $j('#receives-smnotifications-div-all');
                coreDiv.after(custDiv);
                clearInterval(checkDemoAllExist);
            }
        }, 50); // check every 50ms
        
        //move checkbox to desired location in new tab
        var checkDemoNewExist = setInterval(function() {
            coreDiv = $j('#receives-mail-div-new');
            if ( jQuery('#ba-filter_override-div-new').length ) {
                custDiv = $j('#receives-smnotifications-div-new');
                coreDiv.after(custDiv);
                clearInterval(checkDemoNewExist);
            }
        }, 50); // check every 50ms
    }
    /* */
</script>
